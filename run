#!/bin/bash

# This script provides an example on how to run Weka with a classifier on
# the testing and training data sets. It is assumed that the data sets are
# standardized (see the convert script) and in the following files:
#   Data/train_std.arff
#   Data/test_std.arff
#
# Set the variable "classifier" below to a desired Weka object (see Weka
# documentation) that can be used as a classifier. Three examples are
# below (two commented out).



# Define Weka classpaths
cp_weka="weka-3-6-12/weka.jar"
cp_proj="."


#classifier="weka.classifiers.rules.ZeroR"
#classifier="weka.classifiers.bayes.NaiveBayes"
#classifier="weka.classifiers.bayes.NaiveBayesMultinomial"
classifier="weka.classifiers.functions.SMO"


run_ngrams() {
    ################
    #config="combo_all_std"
    config="ngram_all"
    #class_feature="-c 17"
    class_feature=""
    ################
    split="60_30_10"
    train_data="Data/Split_$split/${config}_train.arff"
    test_data="Data/Split_$split/${config}_test.arff"
    java -Xmx1024m -cp "$cp_weka:$cp_proj" $classifier $class_feature -t $train_data -T $test_data
}


run_BoW() {
    train_data="Data/Split_60_30_10/BoW_meta_std_train.arff"
    test_data="Data/Split_60_30_10/BoW_meta_std_test.arff"
    #class_feature="-c 17"
    #class_feature="-c 23"
    #class_feature="-c 1" # BoW_std
    class_feature="-c 7" # BoW_meta_std
    java -Xmx1024m -cp "$cp_weka:$cp_proj" $classifier $class_feature -t $train_data -T $test_data
    #java -Xmx1024m -cp "$cp_weka:$cp_proj" $classifier $class_feature -t $train_data -T $test_data -p 0
}


# Make sure a command is provided.
if [ -z "$1" ]; then
    echo "Please provide a command: 'ngrams' or 'BoW'"
    exit
fi

# If a classifier is given, use that instead.
if [ "$2" = "svm" ]; then
    classifier="weka.classifiers.functions.SMO"
    echo "Using SVM."
elif [ "$2" = "mnb" ]; then
    classifier="weka.classifiers.bayes.NaiveBayesMultinomial"
    echo "Using MNB."
fi

run_$1
#run_ngrams
#run_BoW
