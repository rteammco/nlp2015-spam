#!/bin/bash

# This script provides an example on how to run Weka with a classifier on
# the testing and training data sets. It is assumed that the data sets are
# standardized (see the convert script) and in the following files:
#   Data/train_std.arff
#   Data/test_std.arff
#
# Set the variable "classifier" below to a desired Weka object (see Weka
# documentation) that can be used as a classifier. Three examples are
# below (two commented out).



# Define Weka classpaths
cp_weka="weka-3-6-12/weka.jar"
cp_proj="."

classifier="weka.classifiers.functions.SMO"


run_ngrams() {
    ###################################################
    #config="ngram_345char_mixed"
    #class_feature="" # ngram (any)
    config="BoW_std"
    class_feature="-c 1"
    ###################################################
    split="60_30_10"
    train_data="Data/Split_$split/${config}_train.arff"
    test_data="Data/Split_$split/${config}_test.arff"
    cmd="java -Xmx1024m -cp "$cp_weka:$cp_proj" $classifier $class_feature -t $train_data -T $test_data -p 0"
    $cmd
    echo $cmd
}


run_BoW() {
    #train_data="Data/Split_60_30_10/combo_BoW_meta_345char_mixed_std_train.arff"
    #test_data="Data/Split_60_30_10/combo_BoW_meta_345char_mixed_std_test.arff"
    #train_data="Data/Split_60_30_10/BoW_meta_img_std_train.arff"
    #test_data="Data/Split_60_30_10/BoW_meta_img_std_test.arff"
    train_data="Data/Split_60_30_10/BoW_meta_img2_std_train.arff"
    test_data="Data/Split_60_30_10/BoW_meta_img2_std_test.arff"
    #class_feature="-c 17"
    #class_feature="-c 23"
    #class_feature="-c 1" # BoW_std
    class_feature="-c 10" # BoW_meta_img2_std
    #class_feature="-c 8" # BoW_meta_img_std
    #class_feature="-c 7" # BoW_meta_std, combo_BoW_345char
    #class_feature="-c 13" # combo_BoW_meta_345char
    #java -Xmx1024m -cp "$cp_weka:$cp_proj" $classifier $class_feature -t $train_data -T $test_data
    cmd="java -Xmx1024m -cp "$cp_weka:$cp_proj" $classifier $class_feature -t $train_data -T $test_data -p 0"
    $cmd
    echo $cmd
}


# Make sure a command is provided.
if [ -z "$1" ]; then
    echo "Please provide a command: 'ngrams' or 'BoW'"
    exit
fi

# If a classifier is given, use that instead.
if [ "$2" = "svm" ]; then
    classifier="weka.classifiers.functions.SMO"
    echo "Using Support Vector Machine (SMO)."
elif [ "$2" = "mnb" ]; then
    classifier="weka.classifiers.bayes.NaiveBayesMultinomial"
    echo "Using Multinomial Naive Bayes."
elif [ "$2" = "nb" ]; then
    classifier="weka.classifiers.bayes.NaiveBayes"
    echo "Using Naive Bayes."
elif [ "$2" = "lb" ]; then
    classifier="weka.classifiers.meta.LogitBoost"
    echo "Using LogiBoost."
fi

run_$1 | python process_weka_output.py
